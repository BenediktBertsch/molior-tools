# molior-deploy plugin
# vim: syntax=sh

init_deployment()
{
  init_deployment_dir
  # Minimize per default, if not specified otherwise
  if [ -z "$MINIMIZE" ]; then
    MINIMIZE=1
  fi
}

finalize_deployment()
{
  deployment=$(get_deployment_filename "tar.xz")
  echo " * creating ${deployment}"

  umount_bootstrap
  umount_fs

  cat >$WORK_DIR/metadata.yaml <<EOF
architecture: "$ARCH"
creation_date: $(date +%s)
properties:
 description: "${PROJECT} ${REVISION} ${SUITE}"
 os: "debian"
 release: "${DIST}"
templates:
  /etc/hostname:
    when:
    - create
    - copy
    create_only: false
    template: hostname.tpl
    properties: {}
  /etc/hosts:
    when:
    - create
    - copy
    create_only: false
    template: hosts.tpl
    properties: {}
$LXD_TEMPLATES
EOF

  mkdir $WORK_DIR/templates/
  cp /usr/lib/molior-deploy/lxd-templates/* $WORK_DIR/$PROJECT/$LXD_TEMPLATE_FILES $WORK_DIR/templates/

  mv $WORK_DIR/root $WORK_DIR/rootfs

  tar $TAR_PXZ -cf $WORK_DIR/${deployment} -C $WORK_DIR metadata.yaml templates rootfs
  mv $WORK_DIR/${deployment} ./
  if [ -n "$SUDO_UID" -a -n "$SUDO_GID" ]; then
    chown $SUDO_UID:$SUDO_GID $deployment
  fi
}

