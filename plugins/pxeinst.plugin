# molior-deploy plugin
# vim: syntax=sh

. /usr/lib/molior-deploy/plugins/installer.plugin

# override installer functions:
preinit_deployment()
{
}

init_deployment()
{
  do_fstab=0
  init_deployment_dir
  INSTALLER_USE_PXE=yes
}

finalize_deployment()
{
  # do the same as installer
  prepare_initrd_deployment

  deployment=$(get_deployment_filename "tar$DEPLOYMENT_COMPRESSION_EXT")
  echo " * creating $deployment"


  case $DEPLOYMENT_COMPRESSION in
      none)
         tar $TAR_PXZ -cf $WORK_DIR/$deployment -C $WORK_DIR/pxe vmlinuz initrd.img image.cpio.xz README.md
         exit_on_error "Error creating tar"
      ;;
      xz)
         tar $TAR_PXZ -c${TAR_EXTRA_OPTS}f $WORK_DIR/$deployment -C $WORK_DIR/pxe vmlinuz initrd.img image.cpio.xz README.md
         exit_on_error "Error creating tar"
      ;;
      gzip)
         tar -czf $WORK_DIR/$deployment -C $WORK_DIR/pxe vmlinuz initrd.img image.cpio.xz README.md
         exit_on_error "Error creating tar"
      ;;
  esac

  mv $WORK_DIR/${deployment} ./
  if [ -n "$SUDO_UID" -a -n "$SUDO_GID" ]; then
    chown $SUDO_UID:$SUDO_GID $deployment
  fi
}

